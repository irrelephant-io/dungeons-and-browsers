@using Irrelephant.DnB.Core.Characters.Controller
@using Irrelephant.DnB.Core.Characters

<div
    @onclick="HandleClick"
    id="@Character.Id"
    class="noselect character rounded-card @_animationClass"
>
    <p class="character-name">@Character.Name</p>
    <div class="graphic">
        <img src="img/@(Character.GraphicId).png" />
    </div>
    <p class="intent-text">@GetIntentText()</p>
    @if (Character.Armor > 0)
    {
    <p class="armor">
        🛡️<span class="armor-total">@(Character.Armor)</span>
    </p>
    }
    <p class="health">
        ❤️<span class="health-total">@(Character.Health)</span>/<span class="health-max">@(Character.MaxHealth)</span>
    </p>
</div>

@code {
    [Parameter]
    public CharacterController CharacterController { get; set; }

    public Character Character => CharacterController.Character;

    [CascadingParameter]
    public ControlSurface ControlSurface { get; set; }

    private string _animationClass;

    public void HandleClick()
    {
        ControlSurface.CharacterClicked(Character);
    }

    private string GetIntentText()
    {
        if (CharacterController is AiController ai)
        {
            return ai.GetIntentText();
        }

        return string.Empty;
    }

    public async Task PlayHurtAnimation()
    {
        _animationClass = "animation-hurt";
        StateHasChanged();
        await Task.Delay(500);
        _animationClass = string.Empty;
        StateHasChanged();
    }

    public async Task PlayActionAnimation()
    {
        _animationClass = "animation-action";
        StateHasChanged();
        await Task.Delay(500);
        _animationClass = string.Empty;
        StateHasChanged();
    }
}
